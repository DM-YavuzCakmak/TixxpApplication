using Microsoft.Extensions.DependencyInjection;
using Tixxp.Business.Services.Abstract;
using Tixxp.Business.Services.Abstract.Agency;
using Tixxp.Business.Services.Abstract.AgencyContract;
using Tixxp.Business.Services.Abstract.BankService;
using Tixxp.Business.Services.Abstract.Base;
using Tixxp.Business.Services.Abstract.Channel;
using Tixxp.Business.Services.Abstract.City;
using Tixxp.Business.Services.Abstract.CityTranslation;
using Tixxp.Business.Services.Abstract.Company;
using Tixxp.Business.Services.Abstract.Counter;
using Tixxp.Business.Services.Abstract.Country;
using Tixxp.Business.Services.Abstract.CountryTranslation;
using Tixxp.Business.Services.Abstract.County;
using Tixxp.Business.Services.Abstract.CountyTranslation;
using Tixxp.Business.Services.Abstract.Currency;
using Tixxp.Business.Services.Abstract.CurrencyType;
using Tixxp.Business.Services.Abstract.Event;
using Tixxp.Business.Services.Abstract.EventTicketPrice;
using Tixxp.Business.Services.Abstract.Guide;
using Tixxp.Business.Services.Abstract.InvoiceType;
using Tixxp.Business.Services.Abstract.Language;
using Tixxp.Business.Services.Abstract.PaymentType;
using Tixxp.Business.Services.Abstract.PaymentTypeTranslation;
using Tixxp.Business.Services.Abstract.PersonnelRoleGroup;
using Tixxp.Business.Services.Abstract.PersonnelRoleService;
using Tixxp.Business.Services.Abstract.PersonnelService;
using Tixxp.Business.Services.Abstract.PriceCategory;
using Tixxp.Business.Services.Abstract.Product;
using Tixxp.Business.Services.Abstract.ProductPrice;
using Tixxp.Business.Services.Abstract.ProductSale;
using Tixxp.Business.Services.Abstract.ProductSaleDetail;
using Tixxp.Business.Services.Abstract.ProductSaleInvoiceInfo;
using Tixxp.Business.Services.Abstract.ProductTranslation;
using Tixxp.Business.Services.Abstract.Reservation;
using Tixxp.Business.Services.Abstract.ReservationDetail;
using Tixxp.Business.Services.Abstract.ReservationProductDetail;
using Tixxp.Business.Services.Abstract.ReservationSaleInvoiceInfo;
using Tixxp.Business.Services.Abstract.ReservationStatus;
using Tixxp.Business.Services.Abstract.ReservationStatusTranslation;
using Tixxp.Business.Services.Abstract.RoleGroup;
using Tixxp.Business.Services.Abstract.RoleGroupRole;
using Tixxp.Business.Services.Abstract.RoleService;
using Tixxp.Business.Services.Abstract.SeasonalPrice;
using Tixxp.Business.Services.Abstract.Session;
using Tixxp.Business.Services.Abstract.SessionEventTicketPrice;
using Tixxp.Business.Services.Abstract.SessionStatus;
using Tixxp.Business.Services.Abstract.SessionStatusTranslation;
using Tixxp.Business.Services.Abstract.SessionType;
using Tixxp.Business.Services.Abstract.Template;
using Tixxp.Business.Services.Abstract.TicketStatus;
using Tixxp.Business.Services.Abstract.TicketStatusTranslation;
using Tixxp.Business.Services.Abstract.TicketSubType;
using Tixxp.Business.Services.Abstract.TicketType;
using Tixxp.Business.Services.Concrete.Agency;
using Tixxp.Business.Services.Concrete.AgencyContract;
using Tixxp.Business.Services.Concrete.BankService;
using Tixxp.Business.Services.Concrete.Base;
using Tixxp.Business.Services.Concrete.Channel;
using Tixxp.Business.Services.Concrete.City;
using Tixxp.Business.Services.Concrete.CityTranslation;
using Tixxp.Business.Services.Concrete.Company;
using Tixxp.Business.Services.Concrete.Counter;
using Tixxp.Business.Services.Concrete.Country;
using Tixxp.Business.Services.Concrete.CountryTranslation;
using Tixxp.Business.Services.Concrete.County;
using Tixxp.Business.Services.Concrete.CountyTranslation;
using Tixxp.Business.Services.Concrete.Currency;
using Tixxp.Business.Services.Concrete.CurrencyType;
using Tixxp.Business.Services.Concrete.Event;
using Tixxp.Business.Services.Concrete.EventTicketPrice;
using Tixxp.Business.Services.Concrete.Guide;
using Tixxp.Business.Services.Concrete.InvoiceType;
using Tixxp.Business.Services.Concrete.Language;
using Tixxp.Business.Services.Concrete.PaymentType;
using Tixxp.Business.Services.Concrete.PaymentTypeTranslation;
using Tixxp.Business.Services.Concrete.PersonnelRoleGroup;
using Tixxp.Business.Services.Concrete.PersonnelRoleService;
using Tixxp.Business.Services.Concrete.PersonnelService;
using Tixxp.Business.Services.Concrete.PriceCategory;
using Tixxp.Business.Services.Concrete.Product;
using Tixxp.Business.Services.Concrete.ProductPrice;
using Tixxp.Business.Services.Concrete.ProductSale;
using Tixxp.Business.Services.Concrete.ProductSaleDetail;
using Tixxp.Business.Services.Concrete.ProductSaleInvoiceInfo;
using Tixxp.Business.Services.Concrete.ProductTranslation;
using Tixxp.Business.Services.Concrete.Reservation;
using Tixxp.Business.Services.Concrete.ReservationDetail;
using Tixxp.Business.Services.Concrete.ReservationProductDetail;
using Tixxp.Business.Services.Concrete.ReservationSaleInvoiceInfo;
using Tixxp.Business.Services.Concrete.ReservationStatus;
using Tixxp.Business.Services.Concrete.ReservationStatusTranslation;
using Tixxp.Business.Services.Concrete.RoleGroup;
using Tixxp.Business.Services.Concrete.RoleGroupRole;
using Tixxp.Business.Services.Concrete.RoleService;
using Tixxp.Business.Services.Concrete.SeasonalPrice;
using Tixxp.Business.Services.Concrete.Session;
using Tixxp.Business.Services.Concrete.SessionEventTicketPrice;
using Tixxp.Business.Services.Concrete.SessionStatus;
using Tixxp.Business.Services.Concrete.SessionStatusTranslation;
using Tixxp.Business.Services.Concrete.SessionType;
using Tixxp.Business.Services.Concrete.Template;
using Tixxp.Business.Services.Concrete.Ticket;
using Tixxp.Business.Services.Concrete.TicketStatus;
using Tixxp.Business.Services.Concrete.TicketStatusTranslation;
using Tixxp.Business.Services.Concrete.TicketSubType;
using Tixxp.Business.Services.Concrete.TicketType;

namespace Tixxp.Business;

public static class BusinessServiceRegistration
{
    public static IServiceCollection AddBusinessServices(this IServiceCollection services)
    {
        services.AddScoped(typeof(IBaseService<>), typeof(BaseService<>));


        services.AddScoped<ITicketStatusService, TicketStatusService>();
        services.AddScoped<ITicketStatusTranslationService, TicketStatusTranslationService>();
        services.AddScoped<IPersonnelService, PersonnelService>();
        services.AddScoped<ITicketService, TicketService>();
        services.AddScoped<IReservationProductDetailService, ReservationProductDetailService>();
        services.AddScoped<ILanguageService, LanguageService>();
        services.AddScoped<IPaymentTypeService, PaymentTypeService>();
        services.AddScoped<IReservationDetailService, ReservationDetailService>();
        services.AddScoped<IProductTranslationService, ProductTranslationService>();
        services.AddScoped<IPaymentTypeTranslationService, PaymentTypeTranslationService>();
        services.AddScoped<IReservationSaleInvoiceInfoService, ReservationSaleInvoiceInfoService>();
        services.AddScoped<IRoleService, RoleService>();
        services.AddScoped<IRoleGroupService, RoleGroupService>();
        services.AddScoped<IRoleGroupRoleService, RoleGroupRoleService>();
        services.AddScoped<IPersonnelRoleService, PersonnelRoleService>();
        services.AddScoped<IReservationService, ReservationService>();
        services.AddScoped<IPersonnelRoleGroupService, PersonnelRoleGroupService>();
        services.AddScoped<IBankService, BankService>();
        services.AddScoped<ICurrencyTypeService, CurrencyTypeService>();
        services.AddScoped<IInvoiceTypeService, InvoiceTypeService>();
        services.AddScoped<IAgencyService, AgencyService>();
        services.AddScoped<IPriceCategoryService, PriceCategoryService>();
        services.AddScoped<IAgencyContractService, AgencyContractService>();
        services.AddScoped<ITicketTypeService, TicketTypeService>();
        services.AddScoped<ITicketSubTypeService, TicketSubTypeService>();
        services.AddScoped<ISessionService, SessionService>();
        services.AddScoped<ICompanyService, CompanyService>();
        services.AddScoped<ISeasonalPriceService, SeasonalPriceService>();
        services.AddScoped<IEventTicketPriceService, EventTicketPriceService>();
        services.AddScoped<ISessionEventTicketPriceService, SessionEventTicketPriceService>();

        services.AddScoped<ICounterService, CounterService>();
        services.AddScoped<ISessionStatusService, SessionStatusService>();
        services.AddScoped<IReservationStatusTranslationService, ReservationStatusTranslationService>();
        services.AddScoped<IReservationStatusService, ReservationStatusService>();
        services.AddScoped<IChannelService, ChannelService>();
        services.AddScoped<ICurrencyService, CurrencyService>();
        services.AddScoped<ISessionTypeService, SessionTypeService>();
        services.AddScoped<ISessionStatusTranslationService, SessionStatusTranslationService>();
        services.AddScoped<IProductService, ProductService>();
        services.AddScoped<IProductPriceService, ProductPriceService>();
        services.AddScoped<IProductSaleDetailService, ProductSaleDetailService>();
        services.AddScoped<IProductSaleService, ProductSaleService>();
        services.AddScoped<IProductSaleInvoiceInfoService, ProductSaleInvoiceInfoService>();
        services.AddScoped<IEventService, EventService>();
        services.AddScoped<IGuideService, GuideService>();
        services.AddScoped<ITemplateService, TemplateService>();
        services.AddScoped<ICountryService, CountryService>();
        services.AddScoped<ICityService, CityService>();
        services.AddScoped<ICountyService, CountyService>();



        services.AddScoped<ICountryTranslationService, CountryTranslationService>();
        services.AddScoped<ICityTranslationService, CityTranslationService>();
        services.AddScoped<ICountyTranslationService, CountyTranslationService>();
        return services;
    }
}
