@using Tixxp.Business.DataTransferObjects.Template
@using Tixxp.Entities.Role
@using Tixxp.Entities.RoleGroup
@model List<RoleGroupEntity>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Role Group List";
}

<div class="main-content app-content">
    <div class="container-fluid">
        <div class="d-md-flex d-block align-items-center justify-content-between my-4 page-header-breadcrumb text-fixed-white">
            <h1 class="page-title fw-medium fs-18 mb-0 text-fixed-white">Role Group List</h1>
            @if (User.IsInRole("TIXXP_ROLE_GROUP_ADD"))
            {
                <div class="d-flex align-items-center gap-2">
                    <button class="btn btn-primary btn-sm" onclick="openEditRoleGroupModal(0)">+ New Role Group</button>
                    <span tabindex="0" data-bs-toggle="popover" data-bs-trigger="focus" data-bs-placement="right" title="Role Group Oluşturma Bilgisi" data-bs-content="İstersen boş bir Role Group oluşturup içine roller ekleyebilirsin. Ya da hazır bir şablon seçerek otomatik olarak rollerin gelmesini sağlayabilirsin.">
                        <i class="bi bi-question-circle-fill text-info" style="cursor: pointer;"></i>
                    </span>
                </div>
            }
        </div>

        <div class="card custom-card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered table-sm text-nowrap">
                        <thead>
                            <tr>
                                <th>Name</th>
                                @if (User.IsInRole("TIXXP_ROLE_GROUP_EDIT") || User.IsInRole("TIXXP_ROLE_GROUP_DELETE"))
                                {
                                    <th>İşlem</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.Any())
                            {
                                foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@item.Name</td>
                                        @if (User.IsInRole("TIXXP_ROLE_GROUP_EDIT") || User.IsInRole("TIXXP_ROLE_GROUP_DELETE"))
                                        {
                                            <td>
                                                <div class="hstack gap-2">
                                                    @if (User.IsInRole("TIXXP_ROLE_GROUP_EDIT"))
                                                    {
                                                        <a class="btn btn-sm btn-light" onclick="openEditRoleGroupModal(@item.Id)">
                                                            <i class="ri-edit-line"></i>
                                                        </a>
                                                    }
                                                    @if (User.IsInRole("TIXXP_ROLE_GROUP_DELETE"))
                                                    {
                                                        <a class="btn btn-sm btn-light" onclick="confirmDeleteRoleGroup(@item.Id)">
                                                            <i class="ri-delete-bin-line"></i>
                                                        </a>
                                                    }
                                                </div>
                                            </td>
                                        }
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="2" class="text-center">Kayıt bulunamadı.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="editRoleGroupModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title">Edit Role Group</h5>
                <button class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editRoleGroupForm">
                    <input type="hidden" id="roleGroupId" name="Id" />
                    <div class="mb-3">
                        <label>Role Group Name</label>
                        <input type="text" class="form-control" id="roleGroupName" name="Name" required />
                    </div>

                    <div class="mb-3">
                        <label>Hazır Şablon Seç (Opsiyonel)</label>
                        <select id="templateSelect" class="form-select">
                            <option value="">Şablon Seçin</option>
                            @foreach (var template in ViewBag.RoleGroupTemplates as List<RoleGroupTemplateDto>)
                            {
                                <option value="@template.Id">@template.Name</option>
                            }
                        </select>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <h6>Mevcut Roller</h6>
                            <ul id="availableRoles" class="list-group connectedSortable" style="min-height:200px;">
                                @foreach (var role in ViewBag.AllRoles as List<RoleEntity>)
                                {
                                    <li class="list-group-item" data-id="@role.Id">@role.Name</li>
                                }
                            </ul>
                        </div>
                        <div class="col-md-6">
                            <h6>Gruba Eklenecek Roller</h6>
                            <ul id="selectedRoles" class="list-group connectedSortable bg-light" style="min-height:200px;"></ul>
                        </div>
                    </div>

                    <button type="submit" class="btn btn-primary w-100 mt-4">Kaydet</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/ui/1.13.0/jquery-ui.min.js"></script>
    <script>
        $(function () {
            $(".connectedSortable").sortable({
                connectWith: ".connectedSortable",
                placeholder: "ui-state-highlight"
            }).disableSelection();

            // Bootstrap popover aktif et
            var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'));
            var popoverList = popoverTriggerList.map(function (popoverTriggerEl) {
                return new bootstrap.Popover(popoverTriggerEl);
            });
        });

        function openEditRoleGroupModal(id) {
            const modal = $('#editRoleGroupModal');
            const form = $('#editRoleGroupForm');

            form[0].reset();
            $('#selectedRoles').empty();

            if (id === 0) {
                $('#roleGroupId').val(0);
                modal.find('.modal-title').text('Yeni Role Group');
                modal.modal('show');
                return;
            }

            $.get('/RoleGroup/GetByIdWithRoles', { id: id }, function (data) {
                $('#roleGroupId').val(data.id);
                $('#roleGroupName').val(data.name);

                let selected = "";
                data.roles.forEach(role => {
                    selected += `<li class="list-group-item" data-id="${role.id}">${role.name}</li>`;
                });
                $('#selectedRoles').html(selected);
                modal.find('.modal-title').text('Role Group Güncelle');
                modal.modal('show');
            }).fail(() => Swal.fire("Hata", "Veri alınamadı.", "error"));
        }

        $('#templateSelect').change(function () {
            const id = $(this).val();
            if (!id) return;

            $.get('/RoleGroup/GetAvailableRoleGroupName', { baseName: $("#templateSelect option:selected").text() }, function (name) {
                $('#roleGroupName').val(name);
            });

            $.get('/RoleGroup/GetRoles', { templateId: id }, function (roles) {
                let existingIds = $('#selectedRoles li').map(function () {
                    return $(this).data('id');
                }).get();

                roles.forEach(r => {
                    if (!existingIds.includes(r.id)) {
                        $('#selectedRoles').append(`<li class="list-group-item" data-id="${r.id}">${r.name}</li>`);
                    }
                });
            });
        });

        $('#editRoleGroupForm').submit(function (e) {
            e.preventDefault();

            const id = Number($('#roleGroupId').val());
            const roleIds = $('#selectedRoles li').map(function () {
                return $(this).data('id');
            }).get();

            const data = {
                Id: id,
                Name: $('#roleGroupName').val(),
                RoleIds: roleIds
            };

            const url = id === 0 ? '/RoleGroup/Create' : '/RoleGroup/Update';

            $.ajax({
                url: url,
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function (res) {
                    if (res.success) {
                        Swal.fire("Başarılı", res.message, "success").then(() => location.reload());
                    } else {
                        Swal.fire("Hata", res.message, "error");
                    }
                },
                error: () => Swal.fire("Hata", "Sunucuya ulaşılamadı.", "error")
            });
        });

        function confirmDeleteRoleGroup(id) {
            Swal.fire({
                title: 'Emin misiniz?',
                text: "Bu Role Group silinecek.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Evet, sil!',
                cancelButtonText: 'Vazgeç'
            }).then(result => {
                if (result.isConfirmed) {
                    $.post('/RoleGroup/Delete', { id: id }, function (res) {
                        if (res.success) {
                            Swal.fire("Silindi", res.message, "success").then(() => location.reload());
                        } else {
                            Swal.fire("Hata", res.message, "error");
                        }
                    });
                }
            });
        }
    </script>
}